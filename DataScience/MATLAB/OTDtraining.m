% Script for training algorithm for Optical tissue detection
% P. Silveira, Sep. 2016
% BSX Proprietary

%% Initialization

clear all
close all
[wavel, leds] = getLeds;

% Define training sets

[tAssessments tOD15Assessments tOD27Assessments] = tAssessmentsFunction;    % This is a long array, so define it as a function so it doesn't clutter the beginning of the script.

tCalves = [7.1560E+00	5.8547E-05  % data collected by Meredith during tissue detection verification study
2.3350E+01	1.6420E-04
1.1947E+01	7.3964E-05
1.9939E+01	1.5144E-04
9.8090E+00	7.2326E-05
2.1609E+01	1.4650E-04
2.0625E+01	1.2672E-04
1.2404E+01	6.4746E-05
1.9546E+01	1.3003E-04
1.9546E+01	1.3003E-04
8.5170E+00	6.2408E-05
1.4737E+01	1.3395E-04
9.6290E+00	5.5564E-05
2.7692E+01	1.7118E-04
6.3790E+00	4.4618E-05
2.2997E+01	1.5304E-04
1.7974E+01	1.1929E-04
1.0380E+01	7.3574E-05
3.0085E+01	1.9158E-04
3.0085E+01	1.9158E-04
21.617	1.2116e-04
24.368	1.3393e-04
23.258	1.4057e-04
31.143	1.8648e-04
% data from baseline characterization study
13.99	8.420E-05
16.32	9.280E-05
15.22	9.000E-05
15.27	8.500E-05
19.48	1.060E-04
17.1	9.700E-05
19.55	1.092E-04
11.9	7.320E-05
13.48	8.080E-05
18.12	1.046E-04
25.84	1.378E-04
17.04	9.120E-05
9.242	4.955E-05
8.162	4.163E-05
8.023	4.138E-05
8.684	4.186E-05
9.81	5.012E-05
9.643	4.770E-05
10.04	4.968E-05
8.084	3.958E-05
9.741	4.593E-05
8.76	4.614E-05
9.001	4.671E-05
9.189	4.742E-05
12.19	6.920E-05
10.83	6.344E-05
12.26	7.127E-05
6.911	4.541E-05
7.304	5.212E-05
8.179	5.430E-05
7.257	4.859E-05
7.987	5.222E-05
7.541	5.041E-05
7.838	5.280E-05
7.936	5.309E-05
7.119	4.845E-05
6.881	4.678E-05
7.067	4.833E-05
8.333	5.519E-05
7.735	5.203E-05
7.961	5.407E-05
8.117	5.522E-05
20.95	1.250E-04
22.62	1.348E-04
33.32	2.094E-04
19.19	1.206E-04
16.53	1.058E-04
19.84	1.125E-04
32.08	1.770E-04
29.46	1.611E-04
25.29	1.407E-04
18.1	1.223E-04
16.84	1.071E-04
20.36	1.280E-04
5.073	3.167E-05
5.347	3.363E-05
5.986	3.529E-05
13.07	8.192E-05
16.25	1.034E-04
12.85	8.279E-05
12.82	8.249E-05
13.61	9.030E-05
13.9	9.146E-05
10.36	5.970E-05
10.74	6.425E-05
12.11	6.988E-05
8.168	4.586E-05
8.509	4.734E-05
8.552	4.727E-05
12.77	6.675E-05
10.15	5.111E-05
10.04	5.195E-05
10.54	5.502E-05
10.61	5.612E-05
10.61	5.632E-05
9.522	4.587E-05
9.428	4.780E-05
10.78	5.342E-05
43.36	2.670E-04
25.7	1.306E-04
26.52	1.362E-04
41.92	1.937E-04
40.44	1.968E-04
39.24	1.891E-04
62.68	3.388E-04
82.09	3.780E-04
67.56	3.679E-04
14.5	1.044E-04
15.63	9.411E-05
15.04	9.258E-05
23.26	1.752E-04
27.57	1.980E-04
28.83	2.058E-04
13.15	9.455E-05
14.79	1.089E-04
15.39	1.108E-04
21.16	1.305E-04
22.67	1.406E-04
22.77	1.435E-04
];

tForearms = [1.7174E+01	1.0837E-04
1.9691E+01	1.2808E-04
1.1033E+01	4.2831E-05
5.1406E+01	1.2216E-04
1.9728E+01	1.1950E-04
2.1601E+01	1.2671E-04
2.2484E+01	1.1680E-04
1.3933E+01	6.7494E-05
3.9700E+01	1.2910E-04
3.9700E+01	1.2910E-04
1.9698E+01	1.3553E-04
1.8479E+01	1.1547E-04
1.4410E+01	7.1386E-05
2.2677E+01	1.3124E-04
1.7459E+01	1.1327E-04
2.1462E+01	1.1245E-04
1.6514E+01	9.5747E-05
1.6514E+01	9.5747E-05
3.2781E+01	1.8972E-04
2.0189E+01	1.3052E-04
1.2587E+01	5.2027E-05
2.5301E+01	8.9783E-05
1.7860E+01	1.1551E-04
3.6913E+01	2.7760E-04
1.9916E+01	1.0555E-04
1.4511E+01	9.1182E-05
4.0049E+01	1.0529E-04
4.0049E+01	1.0529E-04
27.626	1.3118e-04
31.226	1.8300e-04];

tInterbike = [33.613 1.8385e-04
20.316 1.1777e-04
21.056 1.2476e-04
20.509 1.1389e-04
20.501 1.1944e-04
17.637 1.1775e-04
14.951 9.6231e-05];

tHands = [-173.13	1.51E-04
33.501	2.95E-04
-52.797	6.19E-05
21.312	1.40E-04
33.88	2.63E-04
57.979	3.52E-04
35.489	2.75E-04
115.382	2.18E-04
64.49	3.68E-04
64.49	3.68E-04
138.409	2.39E-04
42.92	2.03E-04
33.448	2.37E-04
205.283	1.75E-04
30.784	2.25E-04
70.928	3.03E-04
53.453	2.99E-04
46.313	2.66E-04
65.055	3.71E-04
65.055  3.71E-04
139.206	2.1686e-04];

% Non-tissue samples
tMaterials = [-43.083	2.7307e-04
-8.892  3.4710e-04	
16.840  6.8315e-05
-74.527 1.3759e-04
2691.463    1.8588e-04
17.745  1.4977e-04
19.050  3.2141e-06
-202.858    4.3996e-06
28.279	1.3868e-04
-268.028	1.8202e-04
-81.279	1.3784e-05
-33.730	2.8017e-05
-26.980	6.4813e-08
9.949	9.2713e-05
6.555	4.7780e-06
-30.724	2.8781e-05];

tOD15Materials = [2.8785346   2.4660547   2.3873477   2.6640790
   2.9533157   2.5776749   2.5364554   2.8348899
   6.1547437   4.6634645   4.6269846   4.8074589
   5.8136296   5.0292668   4.9965014   5.6935606
   5.2991428   5.1510701   5.1062074   5.2784729
   2.7656934   2.3563316   2.3371584   2.3665333
   4.1721687   3.2445605   3.1497078   3.6800203
   6.1518211   6.0109663   6.1413150   8.0802288
   2.8742471   2.6768579   2.6231134   2.9009013
   5.5068927   5.5747700   5.6455631   5.8327904
   6.1535478   5.7404294   5.4470263   5.6764154
   2.9621940   2.4855192   2.3983114   2.6614175
   6.5612669   6.0199356   6.1845312   6.2059126
   2.7284067   2.6021214   2.5399578   2.6302953
   2.8413155   2.6904991   2.6486943   2.9696712
   2.2036676   2.1113746   2.1085289   2.4138544
   3.5992379   2.9392862   2.8531721   2.7903366
   7.0703802   4.8325839   4.7401037   4.7772017
         NaN   5.2927508   4.9877486   5.1395140
   3.6899161   3.4049432   3.3307078   3.2993021
   6.5447764   5.9135814   5.9698119   6.0058060
   4.7844381   2.2718780   2.1770976   2.3261154
   2.9005458   2.4721076   2.3875539   2.6575081
   3.0079954   2.6101437   2.5630524   2.8758476
   3.0123987   2.5953226   2.5029025   2.7587388
   2.2199893   1.9738051   2.0303798   2.2288132
   4.7585306   4.6381950   4.6728201   4.6836824
   4.2967415   2.5334942   2.5803919   2.5787477
   4.2326369   3.5041847   3.4431944   3.3872855
   6.0358357   5.4042101   5.5461707   5.7521758
   2.4686944   2.4039869   2.5197744   3.1438243
   4.9999580   3.3611045   3.3996484   3.3692462   ];

tOD27Materials = [   4.4347906   3.8718195   3.8471713   4.2880445
   4.7633481   3.9898853   4.0119219   4.4427066
   6.9062853   5.5416656   5.6044483   5.5828199
   7.7350521   6.9484582   6.4853024   6.8595467
   6.0793319   5.8167353   5.7753849   5.8501077
   4.6723762   4.2094851   4.1676650   4.1749420
   5.4018140   4.6877780   4.7716608   5.1151857
   6.9612770   6.5727568   6.8749185   6.9000354
   4.2905540   3.8714073   3.8284688   4.2614093
   7.1779604   6.5650587   6.5565200   6.6653256
   7.6071935   7.0174661   6.9492278   7.5155735
   4.6010389   3.9265952   3.9049313   4.3213811
   6.3964763   6.1211834   6.1836171   6.2026258
   4.3877048   4.0287528   3.9990003   4.0747814
   4.6349597   4.2899961   4.2795577   4.6514812
   3.8456779   3.6243508   3.6900852   4.2078843
   3.9528174   3.2674565   3.2431815   3.4865627
   7.6294169   7.1334858   7.1004338   7.6538930
   7.6416297   7.2533522   7.3288193   8.5523653
   4.7215724   4.0506616   3.9394062   3.8343360
   7.5999432   7.0700874   6.9736032   7.4762831
   6.8209143   3.8390286   3.7632830   3.9283302
   4.5563426   3.9354799   3.9242685   4.3540545
   5.0284047   4.1984987   4.2241912   4.6781797
   4.8227296   4.1873565   4.1735306   4.5784531
   4.1334267   3.7063587   3.7206686   4.0342679
   5.5927854   5.4373002   5.4833636   5.5040870
   5.1498585   3.4934816   3.4946880   3.4994907
   4.7184467   4.0163836   3.9801011   3.9146061
   7.6720438   7.2077479   7.4340711   7.8178949
   3.6352670   3.0782747   3.0813408   3.4865096
   6.0310574   4.3148327   4.3067775   4.2637863];    

% Define which training set to use
% pset = set of true positive values
% nset = set of true negative values

%pset = tCalves;
%pset = [tCalves ; tAssessments];
pset = [tCalves ; tForearms; tAssessments];
%pset = [tOD15Assessments tOD27Assessments];  %  note the concatenation in the first dimension, creating a Nx8 array
nset = tMaterials;
%nset = [tOD15Materials tOD27Materials];

%% Processing

tmean = mean(pset);
tstd = std(pset, 0, 1);

sz = size(pset);
tmean_matrix = repmat(tmean, sz(1), 1); % create matrix of mean values

temp = size(pset);
num_pars = temp(2); % number of classification parameters

C = cov(pset);  % calculate covariance matrix
[V,D] = eig(C); % eigenvalues D and eigenvectors V
D2 = diag(diag(D).^(-0.5));
%D2 = [[D(1,1).^(-0.5) 0];[0 D(2,2)^(-0.5)]];    % D2 = D.^(-0.5)
rot_vector = D2*V'; % rotation vector
p_transform = transpose(rot_vector * (pset - tmean_matrix)');  % matrix of rotated and translated training vectors
negative_transform = transpose(rot_vector * (nset - repmat(tmean, length(nset), 1))');
if num_pars == 2
    forearms_transform = transpose(rot_vector * (tForearms - repmat(tmean, length(tForearms), 1))');
end

% Calculate transformed thresholds
v1Max = max(p_transform,[],1);
v2Max = max(p_transform,[],2);
v1Min = min(p_transform,[],1);
v2Min = min(p_transform,[],2);

%% Display results

rot_vector
tmean


figure
if num_pars == 2
%plot(pset(:,1), pset(:,2), 'k.')
plot(pset(:,1), pset(:,2), 'k.')
hold on
plot(tForearms(:,1), tForearms(:,2), 'b.')
legend('Training', 'Forearms', 'Location', 'Best')
hold off
ylabel('HbF')
xlabel('HbConc')
title('Raw training set')
grid

figure
plot(p_transform(:,1), p_transform(:,2), 'k.')
xlabel('v1')
ylabel('v2')
title('Transformed training set')
grid
axis equal

figure
plot(p_transform(:,1), p_transform(:,2), 'k.')
xlabel('v1')
ylabel('v2')
hold on
plot(forearms_transform(:,1), forearms_transform(:,2), 'b.')
plot(negative_transform(:,1), negative_transform(:,2), 'r.')
legend('Training', 'Forearms', 'Non-tissue', 'Location', 'Best')
hold off
title('Transformed set')
grid
axis equal

else
    boxplot(pset)
    xlabel('LED')
    ylabel('OD')
    
    figure
    boxplot(p_transform)
    xlabel('Orthonormalized parameters')
    ylabel('OD')
    
    figure
    plot3(wavel, tOD15Assessments, tOD27Assessments,'k.')
    hold on
    plot3(wavel, tOD15Materials, tOD27Materials)
    plot3(wavel, tOD15Materials, tOD27Materials, 'r.')
    grid; axis tight
    hold off
    xlabel('Wavelength (nm)')
    ylabel('OD @ 15mm')
    zlabel('OD @ 27mm')
end
